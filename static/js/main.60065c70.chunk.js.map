{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListElem/ContactListElem.js","components/ContactList/ContactListElem/ContactListItemContainer.js","redux/contacts/contactsSelectors.js","components/ContactList/ContactList.js","Filter.js","components/Logo/Logo.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/ContactList/ContactListElem/ContactListElem.module.css","components/Logo/Logo.module.css","components/ContactForm/ContactForm.module.css"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","setFilter","axios","defaults","baseURL","addContact","name","number","dispatch","contactActions","post","then","data","catch","error","fetchContacts","get","deleteContact","id","delete","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","items","props","contacts","find","contact","alert","onSubmit","this","className","styles","contactForm","htmlFor","type","placeholder","onChange","format","mask","disabled","length","Component","connect","contactsOperations","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","ContactListElem","classes","contactDescr","IconButton","aria-label","onClick","fontSize","ownProps","ContactsOperations","getContact","getFilter","filter","getLoading","loading","getFilteredContacts","createSelector","toLowerCase","includes","itemMove","enter","enterActive","exit","exitActive","contactSelectors","console","log","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","mapDispatchToProps","onChangeFilter","contactsActions","contactsSelectors","logoStyles","appear","appearActive","Logo","in","unmountOnExit","App","onFetchContacts","isLoadingContacts","color","height","width","createReducer","ContactActions","_","action","payload","combineReducers","store","configureStore","reducer","contactsReducer","middleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.60065c70.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\n\r\nconst deleteContactRequest = createAction(\"contact/deleteRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteError\");\r\n\r\nconst fetchContactRequest = createAction(\"contact/fetchRequest\");\r\nconst fetchContactSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactError = createAction(\"contacts/fetchError\");\r\n\r\nconst setFilter = createAction(\"contact/filter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  setFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport contactActions from \"./contactsActions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:2000\";\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(contactActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", {\r\n      name,\r\n      number,\r\n    })\r\n    .then(({ data }) => dispatch(contactActions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(contactActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactActions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactActions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(contactActions.fetchContactError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(contactActions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`contacts/${id}`)\r\n    .then(() => dispatch(contactActions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(contactActions.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  deleteContact,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { items } = this.props.state.contacts;\r\n\r\n    if (items && items.find((contact) => name === contact.name)) {\r\n      alert(\"Contact with such name is already exist\");\r\n    } else {\r\n      this.props.onSubmit(name, number);\r\n    }\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label htmlFor=\"nameInput\">\r\n          Name:\r\n          <br />\r\n          <input\r\n            className=\"FormInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"numberInput\">\r\n          Number:\r\n          <br />\r\n          <NumberFormat\r\n            className=\"FormInput\"\r\n            format=\"(###) ###-####\"\r\n            mask=\"\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number...\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  onSubmit: contactsOperations.addContact,\r\n})(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./ContactListElem.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ContactListElem = ({ contact: { name, number }, deleteContact }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <li className={styles.contact}>\r\n      <p className={styles.contactDescr}>\r\n        {name}: {number}\r\n      </p>\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        className={classes.margin}\r\n        type=\"button\"\r\n        onClick={deleteContact}\r\n      >\r\n        <DeleteIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListElem;\r\n","import { connect } from \"react-redux\";\r\nimport ContactListElem from \"./ContactListElem\";\r\nimport ContactsOperations from \"../../../redux/contacts/contactsOperations\";\r\n// import ContactsSelectors from \"../../../redux/contacts/contactsSelectors\";\r\n\r\n// const mapState = (state, ownProps) => {\r\n//   const contact = ContactsSelectors.getContactById(state, ownProps.id);\r\n\r\n//   return {\r\n//     ...contact,\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  deleteContact: () =>\r\n    dispatch(ContactsOperations.deleteContact(ownProps.contact.id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListElem);\r\n\r\n// const mapDispatchToProps = (dispatch, ownProps) => ({\r\n//   deleteContact: () =>\r\n//     dispatch(ContactsOperations.deleteContact(ownProps.contact.id)),\r\n// });\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContact = (state) => state.contacts.items;\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContact, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\n// const getContactById = createSelector(\r\n//   [(_, contactId) => contactId, getContact],\r\n//   (contactId, contacts) => contacts.find((contact) => contact.id === contactId)\r\n// );\r\n\r\nexport default {\r\n  getContact,\r\n  getLoading,\r\n  getFilter,\r\n  getFilteredContacts,\r\n  // getContactById,\r\n};\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport ContactListElem from \"./ContactListElem/ContactListItemContainer\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport contactSelectors from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst itemMove = {\r\n  enter: styles.enter,\r\n  enterActive: styles.enterActive,\r\n  exit: styles.exit,\r\n  exitActive: styles.exitActive,\r\n};\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  console.log(\"ContactList re-render\");\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts &&\r\n        contacts.map((contact) => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames={itemMove}>\r\n            <ContactListElem contact={contact} />\r\n          </CSSTransition>\r\n        ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  if (state.contacts) {\r\n    return {\r\n      contacts: contactSelectors.getFilteredContacts(state),\r\n    };\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"./redux/contacts/contactsActions\";\r\nimport contactsSelectors from \"./redux/contacts/contactsSelectors\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form className=\"FilterForm\">\r\n      <label htmlFor=\"filterInput\">\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          value={value}\r\n          name=\"filter\"\r\n          className=\"FilterInput\"\r\n          placeholder=\"start typing searching name...\"\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: contactsSelectors.getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.setFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Logo.module.css\";\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\nexport const Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\n/* <span role=\"img\" aria-label=\"TELEPHONE\">\r\n☎️\r\n</span> */\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./Filter\";\nimport Loader from \"react-loader-spinner\";\nimport { Logo } from \"./components/Logo\";\nimport contactsOperations from \"./redux/contacts/contactsOperations\";\nimport contactsSelectors from \"./redux/contacts/contactsSelectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n\n  render() {\n    return (\n      <div className=\"Wrapper\">\n        <Logo />\n        <ContactForm />\n        <h2 className=\"Title\">Contacts</h2>\n        <Filter />\n        {this.props.isLoadingContacts && (\n          <Loader type=\"Hearts\" color=\"pink\" height={80} width={80} />\n        )}\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: contactsSelectors.getContact(state),\n    isLoadingContacts: contactsSelectors.getLoading(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport ContactActions from \"./contactsActions\";\r\n\r\nconst onAdd = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\nconst onDelete = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [ContactActions.fetchContactSuccess]: (_, action) => action.payload,\r\n  [ContactActions.addContactSuccess]: onAdd,\r\n  [ContactActions.deleteContactSuccess]: onDelete,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [ContactActions.setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [ContactActions.fetchContactRequest]: () => true,\r\n  [ContactActions.fetchContactSuccess]: () => false,\r\n  [ContactActions.fetchContactError]: () => false,\r\n  [ContactActions.addContactRequest]: () => true,\r\n  [ContactActions.addContactSuccess]: () => false,\r\n  [ContactActions.addContactError]: () => false,\r\n  [ContactActions.deleteContactRequest]: () => true,\r\n  [ContactActions.deleteContactSuccess]: () => false,\r\n  [ContactActions.deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__XxwSW\",\"enterActive\":\"ContactList_enterActive__3DOvI\",\"exit\":\"ContactList_exit__1hyQV\",\"exitActive\":\"ContactList_exitActive__1FzB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListElem_contact__2E9re\",\"contactDescr\":\"ContactListElem_contactDescr__3ONY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__KFw0s\",\"appear\":\"Logo_appear__2Ulgc\",\"appearActive\":\"Logo_appearActive__1w9uO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3vuGJ\"};"],"sourceRoot":""}